{"version":3,"sources":["components/UserList.js","App.js","reportWebVitals.js","index.js"],"names":["UserList","user","Card","Body","className","Nav","Link","href","html_url","Title","login","src","avatar_url","alt","height","App","useState","username","setUsername","users","setUsers","Container","Form","Row","Col","Control","onChange","e","target","value","name","type","placeholder","autoComplete","Group","Button","variant","onClick","preventDefault","axios","get","params","q","per_page","then","res","data","catch","console","log","items","map","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAwBeA,MArBf,YAA2B,IAARC,EAAO,EAAPA,KACjB,OACE,cAACC,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,sBAAKC,UAAU,iCAAf,UACE,8BACE,cAACC,EAAA,EAAIC,KAAL,CAAUC,KAAMN,EAAKO,SAArB,SACE,cAACN,EAAA,EAAKO,MAAN,UACE,6BAAKR,EAAKS,cAIlB,8BACE,qBAAKC,IAAKV,EAAKW,WAAYC,IAAKZ,EAAKW,WAAYE,OAAO,KAAKV,UAAU,kC,iEC+ClEW,MArDf,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAmBA,OACE,eAACC,EAAA,EAAD,CAAWjB,UAAU,MAArB,UACE,oBAAIA,UAAU,OAAd,iCACA,cAACkB,EAAA,EAAD,CAAMlB,UAAU,OAAhB,SACE,eAACmB,EAAA,EAAD,CAAKnB,UAAU,kBAAf,UACE,cAACoB,EAAA,EAAD,CAAKpB,UAAU,QAAf,SACE,cAACkB,EAAA,EAAKG,QAAN,CACEC,SAxBS,SAACC,GACpBT,EAAYS,EAAEC,OAAOC,QAwBXA,MAAOZ,EACPa,KAAK,WACLC,KAAK,OACLC,YAAY,kBACZC,aAAa,UAGjB,cAACT,EAAA,EAAD,UACE,eAACF,EAAA,EAAKY,MAAN,CAAY9B,UAAU,OAAtB,UACE,cAAC+B,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAAQ,UAAUC,QA/B/B,SAACV,GACpBA,EAAEW,iBACFC,IAAMC,IAXO,sCAWM,CACjBC,OAAQ,CAACC,EAAGzB,EAAU0B,SAAU,OAC/BC,MAAK,SAAAC,GACNzB,EAASyB,EAAIC,SACZC,OAAM,SAAApB,GACPqB,QAAQC,IAAItB,OAwBJ,oBACA,cAACQ,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAAQ,SAASC,QAtB1B,WACvBnB,EAAY,IACZE,EAAS,KAoBC,6BAKR,qBAAKhB,UAAU,OAAf,SACGe,EAAM+B,OAAS/B,EAAM+B,MAAMC,KAAI,SAAClD,GAC/B,OAAO,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKmD,aC5CtBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7a6e2c42.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, Nav } from 'react-bootstrap'\n\nfunction UserList({user}) {\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <Nav.Link href={user.html_url}>\n              <Card.Title>\n                <h4>{user.login}</h4>\n              </Card.Title>\n            </Nav.Link>\n          </div>\n        <div>\n          <img src={user.avatar_url} alt={user.avatar_url} height=\"50\" className=\"rounded-circle ml-5\"/>\n        </div>\n      </div>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default UserList\n","import { useState } from 'react'\nimport UserList from './components/UserList';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Col, Button, Container, Row } from 'react-bootstrap'\n\n\nimport axios from 'axios'\nconst BASE_URL = 'https://api.github.com/search/users'\n\nfunction App() {\n  const [username, setUsername] = useState(\"\")\n  const [users, setUsers] = useState([])\n\n  const handleChange = (e) => {\n    setUsername(e.target.value)\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    axios.get(BASE_URL,{\n      params: {q: username, per_page: 100}\n    }).then(res => {\n      setUsers(res.data)\n    }).catch(e => {\n      console.log(e)\n    })\n  }\n  const handleClearUsers = ()=>{\n    setUsername(\"\")\n    setUsers([])\n  }\n  return (\n    <Container className=\"App\">\n      <h1 className=\"mt-2\">Search Github Users</h1>\n      <Form className=\"mt-2\">\n        <Row className=\"align-items-end\">\n          <Col className=\"col-8\">\n            <Form.Control\n              onChange={handleChange}\n              value={username}\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"Enter user name\"\n              autoComplete=\"off\"\n            />\n          </Col>\n          <Col >\n            <Form.Group className=\"mt-2\">\n              <Button type='submit' variant=\"success\" onClick={handleSubmit}>Submit</Button>\n              <Button type='button' variant=\"danger\" onClick={handleClearUsers}>Clear</Button>\n            </Form.Group>\n          </Col>\n        </Row>\n      </Form>\n      <div className=\"mt-5\">\n        {users.items && users.items.map((user)=>{\n          return(<UserList key={user.id} user={user} />)\n        })}\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}